version: '3'

networks:
  laurel:
    external: true

services:
  rocketchat:
    image: registry.rocket.chat/rocketchat/rocket.chat:latest
    container_name: laurel-rocket-chat
    command: >
      bash -c
        "for i in `seq 1 30`; do
          node main.js &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    restart: unless-stopped
    volumes:
      - ./uploads:/app/uploads
    environment:
      - PORT=4000
      - ROOT_URL=http://CHAT.DOMAIN.TLD
      - MONGO_URL=mongodb://laurel-rocket-db:27017/rocketchat
      - MONGO_OPLOG_URL=mongodb://laurel-rocket-db:27017/local
    depends_on:
      - mongo
    networks:
      - laurel
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rocket-chat.rule=Host(`AUTH.DOMAIN.TLD`)"
      - "traefik.http.services.rocket-chat.loadbalancer.server.port=4000"
      - "traefik.http.routers.rocket-chat.entrypoints=websecure"
      - "traefik.http.routers.rocket-chat.tls.certresolver=https_resolver"




  mongo:
    image: mongo:5.0
    restart: unless-stopped
    container_name: laurel-rocket-db
    volumes:
      - ./data/db:/data/db
      #- ./data/dump:/dump
    command: mongod  --oplogSize 128 --replSet rs0 --storageEngine=wiredTiger
    networks:
      - laurel

  # this container's job is just run the command to initialize the replica set.
  # it will run the command and remove himself (it will not stay running)
  mongo-init-replica:
    image: mongo:5.0
    command: >
      bash -c
        "for i in `seq 1 30`; do
          mongo mongo/rocketchat --eval \"
            rs.initiate({
              _id: 'rs0',
              members: [ { _id: 0, host: 'localhost:27017' } ]})\" &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    depends_on:
      - rocketchat
    networks:
      - laurel
